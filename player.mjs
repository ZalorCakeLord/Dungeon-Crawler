import { messageLog } from "./messageLog.mjs";

export class Player {
    constructor(id, name) {
        this.health = 100;
        this.attackPower = 10;
        this.inventory = [];
        this.xp = 0;
        //id is a random number generated by the server
        this.id = id;
        this.name = name;
        this.currentPosition = { x: 0, y: 0 };
        this.previousPosition = { x: 0, y: 0 };
        this.previousDirection = null;
        this.health = 100;
        this.kills = 0
        this.deathCause = "Dungeon Collapse"
    }

    move(direction) {
        console.log(`Player moving from (${this.currentPosition.x}, ${this.currentPosition.y}) to ${direction}`);
        this.previousPosition = { ...this.currentPosition };
        this.previousDirection = direction;

        switch (direction) {
            case 'north':
                this.currentPosition.y -= 1;
                break;
            case 'south':
                this.currentPosition.y += 1;
                break;
            case 'east':
                this.currentPosition.x += 1;
                break;
            case 'west':
                this.currentPosition.x -= 1;
                break;
            default:
                console.error(`Invalid direction: ${direction}`);
        }
        console.log(`Player moved to (${this.currentPosition.x}, ${this.currentPosition.y})`);
    }

    isDead() {
        return this.health <= 0;
    }

    die() {
        this.health = 0;
    }

    addItem(item) {
        this.inventory.push(item);
        console.log(`You picked up a ${item.name}.`);
        item.applyEffect(this);
    }

    displayInventory() {
        messageLog.add('Your inventory:', this.id);
        this.inventory.forEach(item => {
            messageLog.add(`${item.name}: ${item.description} Effect:  ${item.effect.value} ${item.effect.type} ${item.isCursed ? '(cursed)' : ''}`);
        });
    }

    attack(enemy) {
        console.log(`You attack the ${enemy.name}.1`);
        enemy.takeDamage(this.attackPower,this);
        if (!enemy.isDead()) {
            enemy.attack(this);
        }
    }
}